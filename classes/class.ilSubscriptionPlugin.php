<?php
require_once('./Services/UIComponent/classes/class.ilUserInterfaceHookPlugin.php');
require_once('./Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/Subscription/classes/class.ilDynamicLanguage.php');

/**
 * Class ilSubscriptionPlugin
 *
 * @author Fabian Schmid <fs@studer-raimann.ch>
 */
class ilSubscriptionPlugin extends ilUserInterfaceHookPlugin implements ilDynamicLanguageInterface {


    /**
     * @var string
     */
    protected static $baseClass;


	/**
	 * @return string
	 */
	public function getCsvPath() {
		$path = substr(__FILE__, 0, strpos(__FILE__, 'classes')) . 'lang/';
		if (file_exists($path . 'lang_custom.csv')) {
			$file = $path . 'lang_custom.csv';
		} else {
			$file = $path . 'lang.csv';
		}

		return $file;
	}


	/**
	 * @return string
	 */
	public function getAjaxLink() {
		return false;
	}


	/**
	 * @param $key
	 *
	 * @return mixed
	 */
	public function getDynamicTxt($key) {
		return ilDynamicLanguage::getInstance($this, ilDynamicLanguage::MODE_PROD)->txt($key);
	}


	/**
	 * @var ilSubscriptionPlugin
	 */
	protected static $instance;


	/**
	 * @return ilSubscriptionPlugin
	 */
	public static function getInstance() {
		if (!isset(self::$instance)) {
			self::$instance = new self();
		}

		return self::$instance;
	}


	/**
	 * @return string
	 */
	public function getPluginName() {
		return 'Subscription';
	}


	/**
	 * @return bool
	 * @throws ilPluginException
	 */
	public function updateDatabase() {
		$this->checkPreconditions();

		return parent::updateDatabase(); // TODO: Change the autogenerated stub
	}


	/**
	 * @return bool
	 * @throws ilPluginException
	 */
	public function beforeActivation() {
		$this->checkPreconditions();

		return true;
	}


    /**
     * @var string
     *
     * In what class the command/ctrl chain should start for this plugin.
     *
     * This will return ilRouterGUI for ILIAS <= 4.4 if the corresponding plugin is installed
     * and ilUIPluginRouterGUI for ILIAS >= 4.5 and false otherwise.
     *
     * @return string
     */
    public static function getBaseClass() {
        if (self::$baseClass !== null) {
            return self::$baseClass;
        }
        global $ilCtrl;
        if($ilCtrl->lookupClassPath('ilUIPluginRouterGUI')) {
            self::$baseClass = 'ilUIPluginRouterGUI';
        } elseif($ilCtrl->lookupClassPath('ilRouterGUI')) {
            self::$baseClass = 'ilRouterGUI';
        } else {
            self::$baseClass = false;
        }

        return self::$baseClass;
    }


	/**
	 * @return ilCtrl
	 * @throws ilPluginException
	 */
	protected function checkPreconditions() {
		/**
		 * @var $ilCtrl ilCtrl
		 */
		if (self::getBaseClass() == false) {
            ilUtil::sendFailure('Subscription needs ILIAS >= 5.0 OR for ILIAS < 5.0 ilRouterGUI (https://svn.ilias.de/svn/ilias/branches/sr/Router)', true);
            return false;
        }
        $path = strstr(__FILE__, 'Services', true) . 'Libraries/ActiveRecord/';
		global $ilCtrl;
		if (!is_file($path . 'class.ActiveRecord.php') && !is_file('./Services/ActiveRecord/class.ActiveRecordList.php')) {
			throw new ilPluginException('Please install ActiveRecord, see https://github.com/studer-raimann/ActiveRecord');
		}

		return $ilCtrl;
	}
}

?>
